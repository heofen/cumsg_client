syntax = "proto3";

package messenger;
option go_package = "/protoc";
import "google/protobuf/empty.proto";

// Сервис для обмена ключами RSA
service EncryptionService {
  rpc GetClientId(google.protobuf.Empty) returns (Id); // Получить ID клиента
  rpc GiveRsaKey(RsaKey) returns (StatusResponse);      // Отправить серверу публичный ключ клиента
  rpc GetRsaKey(Id) returns (RsaKey);                   // Запросить публичный ключ сервера
}

// Сервис обмена сообщениями
service MessengerService {
  rpc SendMessage(MessageRequest) returns (MessageResponse);      // Отправка сообщения серверу
  rpc GetMessages(GetMessagesRequest) returns (GetMessagesResponse); // Получение всех сообщений для клиента
  rpc StreamMessages(Id) returns (stream Message);                 // Получение потока сообщений
}

// Запрос/ответы для управления ключами
message Id {
  int32 id = 1;
}

message RsaKey {
  int32 id = 1;
  bytes rsa_public_key = 2;
}

message StatusResponse {
  bool success = 1;
  string message = 2;
}

// Запросы и ответы для обмена сообщениями
message MessageRequest {
  int32 id = 1;
  string user = 2;
  bytes encrypted_content = 3;
}

message MessageResponse {
  bool success = 1;
  string error_message = 2; // Сообщение об ошибке для диагностики
}

message GetMessagesRequest {
  int32 id = 1;
}

message GetMessagesResponse {
  repeated Message messages = 1;
}

message Message {
  int32 id = 1;
  string user = 2;
  string content = 3;
  string timestamp = 4;
}

